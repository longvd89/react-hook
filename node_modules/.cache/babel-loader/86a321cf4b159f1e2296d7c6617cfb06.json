{"ast":null,"code":"import _slicedToArray from \"/home/vulong/Documents/Projects/react_hook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vulong/Documents/Projects/react_hook/src/components/Todo.js\";\nimport React, { useState } from 'react';\nconst initialTodos = [{\n  id: 'a',\n  task: 'Learn React',\n  complete: true\n}, {\n  id: 'b',\n  task: 'Learn Firebase',\n  complete: true\n}, {\n  id: 'c',\n  task: 'Learn GraphQL',\n  complete: false\n}];\n\nconst Todo = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        task = _useState2[0],\n        setTask = _useState2[1];\n\n  const handleChangeInput = event => {\n    console.info(event.target.value);\n    setTask(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, initialTodos.map(todo => React.createElement(\"li\", {\n    key: todo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, todo.task)))), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: task,\n    onChange: handleChangeInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Add Todo\")));\n};\n\nexport default Todo;","map":{"version":3,"sources":["/home/vulong/Documents/Projects/react_hook/src/components/Todo.js"],"names":["React","useState","initialTodos","id","task","complete","Todo","setTask","handleChangeInput","event","console","info","target","value","map","todo","handleSubmit"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,MAAMC,YAAY,GAAG,CACjB;AACIC,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,IAAI,EAAE,aAFV;AAGIC,EAAAA,QAAQ,EAAE;AAHd,CADiB,EAMjB;AACIF,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,IAAI,EAAE,gBAFV;AAGIC,EAAAA,QAAQ,EAAE;AAHd,CANiB,EAWjB;AACIF,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,IAAI,EAAE,eAFV;AAGIC,EAAAA,QAAQ,EAAE;AAHd,CAXiB,CAArB;;AAkBA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBAESL,QAAQ,CAAC,EAAD,CAFjB;AAAA;AAAA,QAERG,IAFQ;AAAA,QAEFG,OAFE;;AAIf,QAAMC,iBAAiB,GAAGC,KAAK,IAAI;AAC/BC,IAAAA,OAAO,CAACC,IAAR,CAAaF,KAAK,CAACG,MAAN,CAAaC,KAA1B;AACAN,IAAAA,OAAO,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAP;AACH,GAHD;;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,YAAY,CAACY,GAAb,CAAiBC,IAAI,IAClB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACZ,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQY,IAAI,CAACX,IAAb,CADJ,CADH,CADL,CADJ,EAQI;AAAM,IAAA,QAAQ,EAAEY,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAEZ,IAFX;AAGI,IAAA,QAAQ,EAAEI,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,CARJ,CADJ;AAmBH,CA5BD;;AA6BA,eAAeF,IAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst initialTodos = [\n    {\n        id: 'a',\n        task: 'Learn React',\n        complete: true,\n    },\n    {\n        id: 'b',\n        task: 'Learn Firebase',\n        complete: true,\n    },\n    {\n        id: 'c',\n        task: 'Learn GraphQL',\n        complete: false,\n    },\n];\n\nconst Todo = () => {\n\n    const [task, setTask] = useState('');\n\n    const handleChangeInput = event => {\n        console.info(event.target.value);\n        setTask(event.target.value);\n    };\n\n    return (\n        <div>\n            <ul>\n                {initialTodos.map(todo => (\n                    <li key={todo.id}>\n                        <label>{todo.task}</label>\n                    </li>\n                ))}\n            </ul>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={task}\n                    onChange={handleChangeInput}\n                />\n                <button type=\"submit\">Add Todo</button>\n            </form>\n        </div>\n    );\n};\nexport default Todo;"]},"metadata":{},"sourceType":"module"}